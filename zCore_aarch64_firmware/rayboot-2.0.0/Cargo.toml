[package]
name = "rayboot"
version = "2.0.0"
authors = ["Philipp Oppermann <dev@phil-opp.com>", "Luchangcheng <luchangcheng2333@qq.com"]
license = "MIT/Apache-2.0"
description = "An experimental x86_64/Aarch64 bootloader that works on both BIOS and UEFI systems."
repository = "https://github.com/rust-osdev/bootloader"
edition = "2021"
build = "build.rs"

[workspace]
exclude = [
    "dependencies/"
]

[[bin]]
name = "builder"
required-features = ["builder"]

[[bin]]
name = "x86_64_bios"
required-features = ["bios_bin", "x64"]

[[bin]]
name = "x86_64_uefi"
required-features = ["uefi_bin", "x64"]

[[bin]]
name = "aarch64_uefi"
required-features = ["uefi_bin", "arm64"]

[dependencies]
# generic
usize_conversions = { version = "0.2.0", optional = true }
bit_field = { version = "0.10.0" }
bitflags = "1.3.2"
log = { version = "0.4.11", optional = true }
uefi = { version = "0.15.2", optional = true, features = ["logger", "exts"]}
uefi-services = { version = "0.12.1", optional = true }
uefi-test-runner = { path = "dependencies/uefi-test-runner", optional = true }
argh = { version = "0.1.3", optional = true }
displaydoc = { version = "0.1.7", optional = true }
spinning_top = { version = "0.2.1", optional = true }
anyhow = { version = "1.0.32", optional = true }
llvm-tools = { version = "0.1.1", optional = true }
thiserror = { version = "1.0.20", optional = true }
json = { version = "0.12.4", optional = true }
xmas-elf = { version = "0.7.0", optional = true }
acpi = { version = "4.1.0", optional = true }
rsdp = { version = "1.0.0", optional = true }
irsa = { path = "dependencies/irsa", optional = true }
font8x8 = { version = "0.2.5", default-features = false, features = ["unicode"], optional = true }
serde_json = { version = "1.0", default-features = false, features = ["alloc"], optional = true }
serde = { version = "1.0", default-features = false, features = ["derive"] }
# aarch64
tock-registers = { version = "0.7.x", default-features = false, features = ["register_types"], optional = true }
lazy_static = { version = "1.4", features = ["spin_no_std"], optional = true }
cortex-a = { version = "7.0", optional = true }
# x86_64
x86_64 = { version = "0.13.2", optional = true, default-features = false, features = ["instructions", "inline_asm"] }
fatfs = { version = "0.3.4", optional = true }
gpt = { version = "3.0.0", optional = true }

[build-dependencies]
llvm-tools-build = { version = "0.1", optional = true, package = "llvm-tools" }
toml = { version = "0.5.1", optional = true }
serde = { version = "1.0", features = ["derive"], optional = true}
quote = { version = "1.0", optional = true}
proc-macro2 = { version = "1.0", optional = true}

[features]
default = ["font8x8", "spinning_top", "log"]
builder = ["argh", "thiserror", "displaydoc", "anyhow", "llvm-tools", "json", "fatfs", "gpt"]
bios_bin = ["binary"]
uefi_bin = ["binary", "uefi", "uefi-services", "acpi", "irsa", "xmas-elf", "uefi-test-runner", "serde_json"]
binary = [
    "llvm-tools-build", "toml", "usize_conversions",
    "serde",  "quote", "proc-macro2", "rsdp"
]
x64 = ["x86_64"]
arm64 = ["tock-registers", "lazy_static", "cortex-a"]
virt = []
rpi4 = []
verify_kernel = []

[profile.dev]
opt-level = 0
debug = true
panic = "abort"
overflow-checks = true

[profile.release]
panic = "abort"
lto = false
overflow-checks = true

[package.metadata.docs.rs]
default-target = "x86_64-unknown-linux-gnu"

[package.metadata.release]
no-dev-version = true
pre-release-replacements = [
    { file="Changelog.md", search="# Unreleased", replace="# Unreleased\n\n# {{version}} â€“ {{date}}", exactly=1 },
]
pre-release-commit-message = "Release version {{version}}"
